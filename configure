#!/bin/sh

# compile some test code
# based on https://github.com/tvheadend/tvheadend/
#
check_func () {
  	local OUTP=tst-$1
  	local SEG=$2
  	local DEF=$3

	cat << EOF > $OUTP.c
$SEG
int main() {
#ifndef TEST
  return test();
#else
  return 1;
#endif
}
EOF
	if [ -f $OUTP.c ]
	then
		gcc $OUTP.c -o $OUTP.bin > /dev/null 2>&1
		if [ $? -eq 0 ]
		then
			sed -ri "s/EXTRACFLAGS\=(.*)/EXTRACFLAGS=\1 -D$DEF/" Makefile
			rm -f $OUTP.c $OUTP.bin
			return 0
		fi
		rm -f $OUTP.c
		return 1

	else
		echo "Not found: $OUTP.c"
	fi
	return 1
}



# OS determination
if [ x$1 != x ]; then
UNAME=$1
else
UNAME=`uname`
fi

case ${UNAME} in
FreeBSD | OpenBSD | NetBSD | DragonFly | BSD)
	cat Makefile.BSD > Makefile
	echo "${UNAME} system detected, Makefile created."
	echo "Use make or make qwfwd-dl to build."
	;;

Darwin | MacOSX | Linux | SunOS | GNU | CYGWIN_*)
	cat Makefile.GNU > Makefile
	echo "${UNAME} system detected, Makefile created."
	echo "Use make or make qwfwd-dl/qwfwd-dl32 to build."

	echo "Checking for strlcpy support (e.g. musl libc)"
	check_func strlcpy '#include <string.h>
	#define TEST
	int test(int argc, char **argv) {
	char dst[10];
	strlcpy("test", dst, sizeof(dst));
	return 0;
	}' USE_LIBC_STRLCPY

	echo "Checking for strlcat support (e.g. musl libc)"
	check_func strlcat '#include <string.h>
	#define TEST
	int test(int argc, char **argv) {
	char dst[10];
	strlcat("test", dst, sizeof(dst));
	return 0;
	}' USE_LIBC_STRLCAT
	;;

*)
	echo "ERROR: Unknown system: ${UNAME}."
	exit 1
	;;
esac
